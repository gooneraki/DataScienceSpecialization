#In this project we will investigate the exponential distribution in R and compare it with the Central Limit Theorem. We will perform 1000 simulations, each of consisting of 40 exponentials.
#We will investigate the following the following:
#1. Compare the sample mean to the theoretical mean of the distribution
#2. Compare the sample mean variance with the theoretical mean variance of the distribution
#3. Show that the distribution is approximately normal
#First we create the variables for our project
lambda<- 0.2
n<-40
no_sims<-1000
set.seed(3231)
#Investigation 1
expected_mean <- 1/lambda
expected_mean
sample_means <-replicate(no_sims ,mean(rexp(n, lambda)))
mean_of_means <- mean(sample_means)
mean_of_means
#The sample mean is 4.988 which is very close to the theoretical mean of 5
#Investigation 2
expected_sd<-(1/lambda)/sqrt(n)
expected_sd
sample_means_sd<-sd(sample_means)
sample_means_sd
#Sample mean variance is 0.775 which is very close to the theoretical mean variance of 0.791
#Investigation 3
#Lets plot our results
hist(sample_means,main="Distribution of Sample Means",xlab="sample mean",ylab="Density",breaks=25,freq=FALSE)
abline(v= expected_mean,col="red",lwd=2)
abline(v= mean_of_means,col="blue",lwd=2)
curve(dnorm(x, mean= mean_of_means, sd= sample_means_sd), col="blue", lwd=2, add=TRUE)
curve(dnorm(x, mean= expected_mean, sd= expected_sd), col="red", lwd=2, add=TRUE)
legend('topright', c("Simulated Values", "Theoretical Values"),col=c("blue","red"),lwd=2)
#Looking at the distribution of Sample means we can see that it rather matches the normal distribution plotted using the theoretical mean and sample variance values(red curved line). To verify this even more we can plot the QQ-Plot. We can see that the theoretical quantiles closely match the sample quantiless
qqnorm(sample_means,main ="Normal Q-Q Plot")
qqline(sample_means, col = "red")
getwd()
setwd("~/Dropbox/Coursera/Data_Science_Specialization/06Stat_Infer")
getwd()
install.packages("Tex")
install.packages("Xelatex")
install.packages("Xelatex")
% !TeX program = XeLaTeX
install.packages("knitr")
devtools::install_github("rstudio/rmarkdown")
install.packages("devtools")
devtools::install_github("rstudio/rmarkdown")
library(datasets)
data(ToothGrowth)
head(ToothGrowth)
rm(list=ls())
library(datasets)
data(ToothGrowth)
head(ToothGrowth)
View(ToothGrowth)
summary(ToothGrowth)
View(ToothGrowth)
?data(ToothGrowth)
View(ToothGrowth)
#Statistical Inference Course Project - Part 2
#In this project we will analyze the ToothGrowth growth
#This datasets consists of 60 observations and three variables. Variables are len (numeric: tooth length increase), supp (categorical: VC or OJ) and dose (numerical: dose level)
library(datasets)
data(ToothGrowth)
head(ToothGrowth)
summary(ToothGrowth)
#Statistical Inference Course Project - Part 2
#In this project we will analyze the ToothGrowth growth
#This datasets consists of 60 observations and three variables. Variables are len (numeric: tooth length increase), supp (categorical: VC or OJ) and dose (numerical: dose level - 0.5mg, 1mg or 2mg)
#look at summary(ToothGrowth)
library(datasets)
data(ToothGrowth)
head(ToothGrowth)
summary(ToothGrowth)
ToothGrowth$dose <- as.factor(ToothGrowth$dose)
table(ToothGrowth$supp, ToothGrowth$dose)
table(ToothGrowth$supp, as.factor(ToothGrowth$dose))
boxplot(len~supp*dose, data = ToothGrowth, col = c("darkgreen", "blue"), main = "Tooth Growth", xlab ="Suppliment and dose", ylab = "length in mm")
boxplot(len~supp*dose, data = ToothGrowth, col = c("red", "blue"), main = "Tooth Growth", xlab ="Suppliment and dose", ylab = "tooth length increase in mm")
boxplot(len~supp*dose, data = ToothGrowth, col = c("red", "blue"), main = "Tooth Growth", xlab ="Suppliment type and dose mg", ylab = "tooth length increase in mm")
boxplot(len~supp*dose, data = ToothGrowth, col = c("red", "blue"), main = "Tooth Growth", xlab ="Suppliment type and dose mg", ylab = "tooth length increase in mm")
table(ToothGrowth$supp, as.factor(ToothGrowth$dose))
for(i in levels(ToothGrowth$supp)){
for(j in unique(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i&ToothGrowth$dose==j]
print(paste0("For dosage type ", i, " and for dosage quantity ", j, " the 95% confidence interval of the means is : "))
print(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)))
}
}
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i&ToothGrowth$dose==j]
print(paste0("For dosage type ", i, " and for dosage quantity ", j, " the 95% confidence interval of the means is : "))
print(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)))
}
}
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage  the 95% confidence interval of the means is : "))
print(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)))
}
}
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean is: "))
print(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)))
}
}
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: " &(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)))))
print(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)))
}
}
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ")(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)))))
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "))
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "))
print(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)))
}
}
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),2)
print(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)))
}
}
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ")&2)
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)))
)
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x))))
}
}
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2),round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),round(mean(x) + -1 * qnorm(0.975) * sd(x)/sqrt(length(x)),2),round(mean(x) + qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),
round(mean(x) + -1 * qnorm(0.975) * sd(x)/sqrt(length(x)),2),
round(mean(x) + qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2),))
}
}
#95% Confidence Interval for each suppliment type and
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
toothLen.doseOJ = subset(ToothGrowth, supp == "OJ")
toothLen.doseVC = subset(ToothGrowth, supp == "VC")
doseEffect  <- t.test(toothLen.doseOJ$len, toothLen.doseVC$len)
doseEffect
View(toothLen.doseOJ)
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2),round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
toothLen.doseOJ = subset(ToothGrowth, supp == "OJ")
toothLen.doseVC = subset(ToothGrowth, supp == "VC")
doseEffect  <- t.test(toothLen.doseOJ$len, toothLen.doseVC$len)
doseEffect
toothLen.dose0.5 = subset(ToothGrowth, dose == 0.5)
toothLen.dose1.0= subset(ToothGrowth, dose == 1)
toothLen.dose2.0= subset(ToothGrowth, dose == 2)
View(toothLen.dose0.5)
toothLen.dose0.5 = subset(ToothGrowth, dose == 0.5)
toothLen.dose1.0= subset(ToothGrowth, dose == 1)
toothLen.dose2.0= subset(ToothGrowth, dose == 2)
doseEffect  <- t.test(toothLen.dose0.5$len, toothLen.dose1.0$len)
doseEffect
#We will plot boxplots for each suppliment type (red are OJ, blue are VC) and dosage vs tooth length increase
boxplot(len~supp*dose, data = ToothGrowth, col = c("red", "blue"), main = "Tooth Growth", xlab ="Suppliment type and dose mg", ylab = "tooth length increase in mm")
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", round(j,1), "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in unique(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", round(j,1), "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#We will plot boxplots for each suppliment type (red are OJ, blue are VC) and dosage vs tooth length increase
boxplot(len~supp*dose, data = ToothGrowth, col = c("red", "blue"), main = "Tooth Growth", xlab ="Suppliment type and dose mg", ylab = "tooth length increase in mm")
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
ToothGrowth.dose0.5 = subset(ToothGrowth, dose == 0.5)
ToothGrowth.dose1.0= subset(ToothGrowth, dose == 1)
ToothGrowth.dose2.0= subset(ToothGrowth, dose == 2)
doseEffect0.5_to_1.0  <- t.test(ToothGrowth.dose0.5$len, ToothGrowth.dose1.0$len)
doseEffect0.5_to_1.0
doseEffect1.0_to_2.0  <- t.test( ToothGrowth.dose1.0$len,ToothGrowth.dose2.0$len)
doseEffect1.0_to_2.0
ToothGrowth.typeOJ = subset(ToothGrowth, supp == "OJ")
ToothGrowth.typeVC = subset(ToothGrowth, supp == "VC")
typeEffect <- t.test(ToothGrowth.typeOJ, ToothGrowth.typeVC)
typeEffect
typeEffect <- t.test(ToothGrowth.typeOJ, ToothGrowth.typeVC)
ToothGrowth.typeOJ = subset(ToothGrowth, supp == "OJ")
ToothGrowth.typeVC = subset(ToothGrowth, supp == "VC")
typeEffect <- t.test(ToothGrowth.typeOJ$len, ToothGrowth.typeVC$len)
typeEffect
?t.test
cls
clear
rm(list=ls())
#Statistical Inference Course Project - Part 2
#In this project we will analyze the ToothGrowth data
library(datasets)
data(ToothGrowth)
#This datasets consists of 60 observations and three variables. Variables are len (numeric: tooth length increase), supp (categorical: VC or OJ) and dose (numerical: dose level - 0.5mg, 1mg or 2mg)
#look at summary(ToothGrowth)
summary(ToothGrowth)
table(ToothGrowth$supp, as.factor(ToothGrowth$dose))
#We will plot boxplots for each suppliment type (red are OJ, blue are VC) and dosage vs tooth length increase
boxplot(len~supp*dose, data = ToothGrowth, col = c("red", "blue"), main = "Tooth Growth", xlab ="Suppliment type and dose mg", ylab = "tooth length increase in mm")
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in unique(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
ToothGrowth.dose0.5 = subset(ToothGrowth, dose == 0.5)
ToothGrowth.dose1.0= subset(ToothGrowth, dose == 1)
ToothGrowth.dose2.0= subset(ToothGrowth, dose == 2)
doseEffect0.5_to_1.0  <- t.test(ToothGrowth.dose0.5$len, ToothGrowth.dose1.0$len)
doseEffect0.5_to_1.0
#95% C.I. of the difference in means between observations that received 0.5mg and 1.0mg dosage does not contain 0. We reject the null hypothesis that the true difference in means is zero.
doseEffect1.0_to_2.0  <- t.test( ToothGrowth.dose1.0$len,ToothGrowth.dose2.0$len)
doseEffect1.0_to_2.0
#95% C.I. of the difference in tooth-length means between observations that received 1.0mg and 2.0mg dosage does not contain 0. We reject the null hypothesis that the true difference in means is zero and accept alternative hypothesis i.e. we accept that there is a difference in tooth length increase between observations that received 1.0 mg vs 2.0 mg
#Now lets compare the tooth length increase between different suppliment types.
ToothGrowth.typeOJ = subset(ToothGrowth, supp == "OJ")
ToothGrowth.typeVC = subset(ToothGrowth, supp == "VC")
typeEffect <- t.test(ToothGrowth.typeOJ$len, ToothGrowth.typeVC$len)
typeEffect
#The 95% c.i. of the difference in mean tooth length increase between observations of supp type OJ and supp type VC does contain 0. We fail to reject the null hypothesis that states the difference in means is zero.
#p-value is only 6% and the null hypothesis just made it.
ToothGrowth.typeOJ.dose0.5 = subset(ToothGrowth, supp == "OJ" and dose=0.5)
ToothGrowth.typeOJ.dose0.5 = subset(ToothGrowth, supp == "OJ" & dose=0.5)
ToothGrowth.typeOJ.dose0.5 = subset(ToothGrowth, supp == "OJ" & dose==0.5)
View(ToothGrowth.dose0.5)
View(ToothGrowth.typeVC)
View(ToothGrowth.typeOJ.dose0.5)
ToothGrowth.typeOJ.dose0.5 = subset(ToothGrowth, supp == "OJ" & dose==0.5)
ToothGrowth.typeOJ.dose1.0 = subset(ToothGrowth, supp == "OJ" & dose==1.0)
ToothGrowth.typeOJ.dose2.0 = subset(ToothGrowth, supp == "OJ" & dose==2.0)
ToothGrowth.typeVC.dose0.5 = subset(ToothGrowth, supp == "VC" & dose==0.5)
ToothGrowth.typeVC.dose1.0 = subset(ToothGrowth, supp == "VC" & dose==1.0)
ToothGrowth.typeVC.dose2.0 = subset(ToothGrowth, supp == "VC" & dose==2.0)
ToothGrowth.typeOJ.dose0.5 = subset(ToothGrowth, supp == "OJ" & dose==0.5)
ToothGrowth.typeOJ.dose1.0 = subset(ToothGrowth, supp == "OJ" & dose==1.0)
ToothGrowth.typeOJ.dose2.0 = subset(ToothGrowth, supp == "OJ" & dose==2.0)
ToothGrowth.typeVC.dose0.5 = subset(ToothGrowth, supp == "VC" & dose==0.5)
ToothGrowth.typeVC.dose1.0 = subset(ToothGrowth, supp == "VC" & dose==1.0)
ToothGrowth.typeVC.dose2.0 = subset(ToothGrowth, supp == "VC" & dose==2.0)
typeEffect_at0.5 <- t.test(ToothGrowth.typeOJ.dose0.5$len, ToothGrowth.typeVC.dose0.5$len)
typeEffect_at1.0<- t.test(ToothGrowth.typeOJ.dose1.0$len, ToothGrowth.typeVC.dose1.0$len)
typeEffect_at2.0<-t.test(ToothGrowth.typeOJ.dose2.0$len, ToothGrowth.typeVC.dose2.0$len)
typeEffect_at0.5
typeEffect_at1.0
typeEffect_at2.0
typeEffect_at1.0
typeEffect_at0.5
