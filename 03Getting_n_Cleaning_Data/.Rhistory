x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2),round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),round(mean(x) + -1 * qnorm(0.975) * sd(x)/sqrt(length(x)),2),round(mean(x) + qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),
round(mean(x) + -1 * qnorm(0.975) * sd(x)/sqrt(length(x)),2),
round(mean(x) + qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2),))
}
}
#95% Confidence Interval for each suppliment type and
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
toothLen.doseOJ = subset(ToothGrowth, supp == "OJ")
toothLen.doseVC = subset(ToothGrowth, supp == "VC")
doseEffect  <- t.test(toothLen.doseOJ$len, toothLen.doseVC$len)
doseEffect
View(toothLen.doseOJ)
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(c(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: "),
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + c(-1,1) * qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2),round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
toothLen.doseOJ = subset(ToothGrowth, supp == "OJ")
toothLen.doseVC = subset(ToothGrowth, supp == "VC")
doseEffect  <- t.test(toothLen.doseOJ$len, toothLen.doseVC$len)
doseEffect
toothLen.dose0.5 = subset(ToothGrowth, dose == 0.5)
toothLen.dose1.0= subset(ToothGrowth, dose == 1)
toothLen.dose2.0= subset(ToothGrowth, dose == 2)
View(toothLen.dose0.5)
toothLen.dose0.5 = subset(ToothGrowth, dose == 0.5)
toothLen.dose1.0= subset(ToothGrowth, dose == 1)
toothLen.dose2.0= subset(ToothGrowth, dose == 2)
doseEffect  <- t.test(toothLen.dose0.5$len, toothLen.dose1.0$len)
doseEffect
#We will plot boxplots for each suppliment type (red are OJ, blue are VC) and dosage vs tooth length increase
boxplot(len~supp*dose, data = ToothGrowth, col = c("red", "blue"), main = "Tooth Growth", xlab ="Suppliment type and dose mg", ylab = "tooth length increase in mm")
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", round(j,1), "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in unique(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", round(j,1), "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#We will plot boxplots for each suppliment type (red are OJ, blue are VC) and dosage vs tooth length increase
boxplot(len~supp*dose, data = ToothGrowth, col = c("red", "blue"), main = "Tooth Growth", xlab ="Suppliment type and dose mg", ylab = "tooth length increase in mm")
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
ToothGrowth.dose0.5 = subset(ToothGrowth, dose == 0.5)
ToothGrowth.dose1.0= subset(ToothGrowth, dose == 1)
ToothGrowth.dose2.0= subset(ToothGrowth, dose == 2)
doseEffect0.5_to_1.0  <- t.test(ToothGrowth.dose0.5$len, ToothGrowth.dose1.0$len)
doseEffect0.5_to_1.0
doseEffect1.0_to_2.0  <- t.test( ToothGrowth.dose1.0$len,ToothGrowth.dose2.0$len)
doseEffect1.0_to_2.0
ToothGrowth.typeOJ = subset(ToothGrowth, supp == "OJ")
ToothGrowth.typeVC = subset(ToothGrowth, supp == "VC")
typeEffect <- t.test(ToothGrowth.typeOJ, ToothGrowth.typeVC)
typeEffect
typeEffect <- t.test(ToothGrowth.typeOJ, ToothGrowth.typeVC)
ToothGrowth.typeOJ = subset(ToothGrowth, supp == "OJ")
ToothGrowth.typeVC = subset(ToothGrowth, supp == "VC")
typeEffect <- t.test(ToothGrowth.typeOJ$len, ToothGrowth.typeVC$len)
typeEffect
?t.test
cls
clear
rm(list=ls())
#Statistical Inference Course Project - Part 2
#In this project we will analyze the ToothGrowth data
library(datasets)
data(ToothGrowth)
#This datasets consists of 60 observations and three variables. Variables are len (numeric: tooth length increase), supp (categorical: VC or OJ) and dose (numerical: dose level - 0.5mg, 1mg or 2mg)
#look at summary(ToothGrowth)
summary(ToothGrowth)
table(ToothGrowth$supp, as.factor(ToothGrowth$dose))
#We will plot boxplots for each suppliment type (red are OJ, blue are VC) and dosage vs tooth length increase
boxplot(len~supp*dose, data = ToothGrowth, col = c("red", "blue"), main = "Tooth Growth", xlab ="Suppliment type and dose mg", ylab = "tooth length increase in mm")
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in levels(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in unique(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
ToothGrowth.dose0.5 = subset(ToothGrowth, dose == 0.5)
ToothGrowth.dose1.0= subset(ToothGrowth, dose == 1)
ToothGrowth.dose2.0= subset(ToothGrowth, dose == 2)
doseEffect0.5_to_1.0  <- t.test(ToothGrowth.dose0.5$len, ToothGrowth.dose1.0$len)
doseEffect0.5_to_1.0
#95% C.I. of the difference in means between observations that received 0.5mg and 1.0mg dosage does not contain 0. We reject the null hypothesis that the true difference in means is zero.
doseEffect1.0_to_2.0  <- t.test( ToothGrowth.dose1.0$len,ToothGrowth.dose2.0$len)
doseEffect1.0_to_2.0
#95% C.I. of the difference in tooth-length means between observations that received 1.0mg and 2.0mg dosage does not contain 0. We reject the null hypothesis that the true difference in means is zero and accept alternative hypothesis i.e. we accept that there is a difference in tooth length increase between observations that received 1.0 mg vs 2.0 mg
#Now lets compare the tooth length increase between different suppliment types.
ToothGrowth.typeOJ = subset(ToothGrowth, supp == "OJ")
ToothGrowth.typeVC = subset(ToothGrowth, supp == "VC")
typeEffect <- t.test(ToothGrowth.typeOJ$len, ToothGrowth.typeVC$len)
typeEffect
#The 95% c.i. of the difference in mean tooth length increase between observations of supp type OJ and supp type VC does contain 0. We fail to reject the null hypothesis that states the difference in means is zero.
#p-value is only 6% and the null hypothesis just made it.
ToothGrowth.typeOJ.dose0.5 = subset(ToothGrowth, supp == "OJ" and dose=0.5)
ToothGrowth.typeOJ.dose0.5 = subset(ToothGrowth, supp == "OJ" & dose=0.5)
ToothGrowth.typeOJ.dose0.5 = subset(ToothGrowth, supp == "OJ" & dose==0.5)
View(ToothGrowth.dose0.5)
View(ToothGrowth.typeVC)
View(ToothGrowth.typeOJ.dose0.5)
ToothGrowth.typeOJ.dose0.5 = subset(ToothGrowth, supp == "OJ" & dose==0.5)
ToothGrowth.typeOJ.dose1.0 = subset(ToothGrowth, supp == "OJ" & dose==1.0)
ToothGrowth.typeOJ.dose2.0 = subset(ToothGrowth, supp == "OJ" & dose==2.0)
ToothGrowth.typeVC.dose0.5 = subset(ToothGrowth, supp == "VC" & dose==0.5)
ToothGrowth.typeVC.dose1.0 = subset(ToothGrowth, supp == "VC" & dose==1.0)
ToothGrowth.typeVC.dose2.0 = subset(ToothGrowth, supp == "VC" & dose==2.0)
ToothGrowth.typeOJ.dose0.5 = subset(ToothGrowth, supp == "OJ" & dose==0.5)
ToothGrowth.typeOJ.dose1.0 = subset(ToothGrowth, supp == "OJ" & dose==1.0)
ToothGrowth.typeOJ.dose2.0 = subset(ToothGrowth, supp == "OJ" & dose==2.0)
ToothGrowth.typeVC.dose0.5 = subset(ToothGrowth, supp == "VC" & dose==0.5)
ToothGrowth.typeVC.dose1.0 = subset(ToothGrowth, supp == "VC" & dose==1.0)
ToothGrowth.typeVC.dose2.0 = subset(ToothGrowth, supp == "VC" & dose==2.0)
typeEffect_at0.5 <- t.test(ToothGrowth.typeOJ.dose0.5$len, ToothGrowth.typeVC.dose0.5$len)
typeEffect_at1.0<- t.test(ToothGrowth.typeOJ.dose1.0$len, ToothGrowth.typeVC.dose1.0$len)
typeEffect_at2.0<-t.test(ToothGrowth.typeOJ.dose2.0$len, ToothGrowth.typeVC.dose2.0$len)
typeEffect_at0.5
typeEffect_at1.0
typeEffect_at2.0
typeEffect_at1.0
typeEffect_at0.5
rm(list=ls())
#Statistical Inference Course Project - Part 2
#In this project we will analyze the ToothGrowth data
library(datasets)
data(ToothGrowth)
#This datasets consists of 60 observations and three variables. Variables are len (numeric: tooth length increase), supp (categorical: VC or OJ) and dose (numerical: dose level - 0.5mg, 1mg or 2mg)
#look at summary(ToothGrowth)
summary(ToothGrowth)
table(ToothGrowth$supp, as.factor(ToothGrowth$dose))
#We will plot boxplots for each suppliment type (red are OJ, blue are VC) and dosage vs tooth length increase
boxplot(len~supp*dose, data = ToothGrowth, col = c("red", "blue"), main = "Tooth Growth", xlab ="Suppliment type and dose mg", ylab = "tooth length increase in mm")
#95% Confidence Interval for each suppliment type and dosage
for(i in levels(ToothGrowth$supp)){
for(j in unique(ToothGrowth$dose)){
x <- ToothGrowth$len[ToothGrowth$supp==i & ToothGrowth$dose==j]
print(paste0("Suppliment type ", i, " and ", j, "mg dosage 95% confidence interval of the mean: ",
round(mean(x) + -1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)," ",round(mean(x) + 1* qnorm(0.975) * sd(x)/sqrt(length(x)),2)))
}
}
#We can see that as dosage increases, tooth length also increases
#We can also prove it performing t-tests
ToothGrowth.dose0.5 = subset(ToothGrowth, dose == 0.5)
ToothGrowth.dose1.0= subset(ToothGrowth, dose == 1)
ToothGrowth.dose2.0= subset(ToothGrowth, dose == 2)
doseEffect0.5_to_1.0  <- t.test(ToothGrowth.dose0.5$len, ToothGrowth.dose1.0$len)
doseEffect0.5_to_1.0
#95% C.I. of the difference in means between observations that received 0.5mg and 1.0mg dosage does not contain 0. We reject the null hypothesis that the true difference in means is zero.
doseEffect1.0_to_2.0  <- t.test( ToothGrowth.dose1.0$len,ToothGrowth.dose2.0$len)
doseEffect1.0_to_2.0
#95% C.I. of the difference in tooth-length means between observations that received 1.0mg and 2.0mg dosage does not contain 0. We reject the null hypothesis that the true difference in means is zero and accept alternative hypothesis i.e. we accept that there is a difference in tooth length increase between observations that received 1.0 mg vs 2.0 mg
#Now lets compare the tooth length increase between different suppliment types.
ToothGrowth.typeOJ = subset(ToothGrowth, supp == "OJ")
ToothGrowth.typeVC = subset(ToothGrowth, supp == "VC")
typeEffect <- t.test(ToothGrowth.typeOJ$len, ToothGrowth.typeVC$len)
typeEffect
#The 95% c.i. of the difference in mean tooth length increase between observations of supp type OJ and supp type VC does contain 0. We fail to reject the null hypothesis that states the difference in means is zero.
#However p-value is only 6%. We will perform more test comparing these differences
ToothGrowth.typeOJ.dose0.5 = subset(ToothGrowth, supp == "OJ" & dose==0.5)
ToothGrowth.typeOJ.dose1.0 = subset(ToothGrowth, supp == "OJ" & dose==1.0)
ToothGrowth.typeOJ.dose2.0 = subset(ToothGrowth, supp == "OJ" & dose==2.0)
ToothGrowth.typeVC.dose0.5 = subset(ToothGrowth, supp == "VC" & dose==0.5)
ToothGrowth.typeVC.dose1.0 = subset(ToothGrowth, supp == "VC" & dose==1.0)
ToothGrowth.typeVC.dose2.0 = subset(ToothGrowth, supp == "VC" & dose==2.0)
typeEffect_at0.5 <- t.test(ToothGrowth.typeOJ.dose0.5$len, ToothGrowth.typeVC.dose0.5$len)
typeEffect_at1.0<- t.test(ToothGrowth.typeOJ.dose1.0$len, ToothGrowth.typeVC.dose1.0$len)
typeEffect_at2.0<-t.test(ToothGrowth.typeOJ.dose2.0$len, ToothGrowth.typeVC.dose2.0$len)
#For the tests below:
#Null Hypothesis: True difference in means is equal to 0
#Alternative hypothesis: True difference in means is not equal to 0
#Significance level: 5%
typeEffect_at0.5
#95% C.I. does not contain zero and it is positive (p-value is 0.6%). We reject the null hypothesis
typeEffect_at1.0
#95% C.I. does not contain zero and it is positive (p-value 0.1%). We reject the null hypothesis
typeEffect_at2.0
#95% C.I. does contain zero (p-value is 96%). We fail to reject the null hypothesis.
#We conlcude that at 2.0mg dosage there is no difference between supp types in tooth length increase but at 0.5mg and 1.0mg OJ types have larger tooth length increase
typeEffect_at0.5$conf.int
rm(list=ls())
library(httr)
direccion <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
archivo <- "ss06hid.csv"
download.file(direccion, archivo, method="curl")
data <- read.csv("ss06hid.csv")
logicalvector <- data$ACR==3 & data$AGS==6
first3 <- which(logicalvector)[1:3] # which() treats NAs as FALSE
first3
setwd("~/Dropbox/Coursera/Data_Science_Specialization/03Getting_n_Cleaning_Data")
library(jpeg)
direccion2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
archivo2 <- "jeff.jpg"
download.file(direccion2, archivo2, method="curl")
foto <- readJPEG("jeff.jpg", native = TRUE)
quantile(foto)
install.packages("jpeg")
library(jpeg)
direccion2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
archivo2 <- "jeff.jpg"
download.file(direccion2, archivo2, method="curl")
foto <- readJPEG("jeff.jpg", native = TRUE)
quantile(foto)
direccion2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
archivo2 <- "jeff.jpg"
download.file(direccion2, archivo2, method="curl")
foto <- readJPEG("jeff.jpg", native = TRUE)
quantile(foto,probs=c(0.3,0.8))
library(sqldf)
install.packages("sqldf")
library(sqldf)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "acs.csv", method = "curl")
dateDownloaded <- date()
acs <- read.table("./acs.csv",sep=",",header=TRUE)
head(acs)
# households on greater than 10 acres who sold more than $10,000 worth of agriculture products
# ACR=3 AND AGS=6
agricultureLogical<-(acs$ACR==3 & acs$AGS==6)
which(agricultureLogical)
class(agricultureLogical)
quantile(foto,probs=c(0.3,0.8))
data2[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
library(data.table)
direccion3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
archivo3 <- "GDP.csv"
download.file(direccion3, archivo3, method="curl")
GDP <- data.table(read.csv("GDP.csv", skip = 4, nrows = 191))
GDP <- GDP[X != ""]
GDP <- GDP[, list(X, X.1, X.3, X.4)]
setnames(GDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "GDP"))
direccion4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
archivo4 <- "EDSTATS_Country.csv"
download.file(direccion4, archivo4, method="curl")
EDSTATS <- data.table(read.csv("EDSTATS_Country.csv"))
data2 <- merge(GDP, EDSTATS, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(data2$rankingGDP)))
data2[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, GDP)][13]
require(data.table)
install.packages("data.table")
library(data.table)
direccion3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
archivo3 <- "GDP.csv"
download.file(direccion3, archivo3, method="curl")
GDP <- data.table(read.csv("GDP.csv", skip = 4, nrows = 191))
GDP <- GDP[X != ""]
GDP <- GDP[, list(X, X.1, X.3, X.4)]
setnames(GDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "GDP"))
direccion4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
archivo4 <- "EDSTATS_Country.csv"
download.file(direccion4, archivo4, method="curl")
EDSTATS <- data.table(read.csv("EDSTATS_Country.csv"))
data2 <- merge(GDP, EDSTATS, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(data2$rankingGDP)))
data2[order(rankingGDP, decreasing = TRUE), list(CountryCode, Long.Name.x, Long.Name.y, rankingGDP, GDP)][13]
data2[, mean(rankingGDP, na.rm = TRUE), by = Income.Group]
breaks <- quantile(data2$rankingGDP, probs = seq(0, 1, 0.2), na.rm = TRUE)
data2$quantileGDP <- cut(data2$rankingGDP, breaks = breaks)
data2[Income.Group == "Lower middle income", .N, by = c("Income.Group", "quantileGDP")]
if (!file.info('UCI HAR Dataset')$isdir) {
dataFile <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
dir.create('UCI HAR Dataset')
download.file(dataFile, 'UCI-HAR-dataset.zip', method='curl')
unzip('./UCI-HAR-dataset.zip')
}
library(RCurl)
if (!file.info('UCI HAR Dataset')$isdir) {
dataFile <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
dir.create('UCI HAR Dataset')
download.file(dataFile, 'UCI-HAR-dataset.zip', method='curl')
unzip('./UCI-HAR-dataset.zip')
}
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl,destfile="./data/Dataset.zip",method="curl")
unzip(zipfile="./data/Dataset.zip",exdir="./data")
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl,destfile="./data/Dataset.zip",method="curl")
if(!file.exists("./data")){dir.create("./data")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl,destfile="./data/Dataset.zip",method="curl")}
if(!file.exists("./project")){dir.create("./project")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl,destfile="./project/Dataset.zip",method="curl")}
unzip(zipfile="./data/Dataset.zip",exdir="./project")
path_rf <- file.path("./project" , "UCI HAR Dataset")
files<-list.files(path_rf, recursive=TRUE)
files
unzip(zipfile="./project/Dataset.zip",exdir="./project")
path_rf <- file.path("./project" , "UCI HAR Dataset")
files<-list.files(path_rf, recursive=TRUE)
files
rm(list=ls())
path_rf <- file.path("./project" , "UCI HAR Dataset")
files<-list.files(path_rf, recursive=TRUE)
files
dataActivityTest  <- read.table(file.path(path_rf, "test" , "Y_test.txt" ),header = FALSE)
dataActivityTrain <- read.table(file.path(path_rf, "train", "Y_train.txt"),header = FALSE)
View(dataActivityTest)
View(dataActivityTrain)
dataActivity<- rbind(dataActivityTrain, dataActivityTest)
View(dataActivity)
path_rf <- file.path("./project" , "UCI HAR Dataset")
x.test <- read.table(file.path(path_rf, "test" , "X_test.txt" ),header = FALSE)
x.test <- read.table(file.path(path_rf, "test" , "X_train.txt" ),header = FALSE)
x.test <- read.table(file.path(path_rf, "test" , "X_test.txt" ),header = FALSE)
x <- rbind(x.train, x.test)
x.train <- read.table(file.path(path_rf, "train" , "X_train.txt" ),header = FALSE)
x.test <- read.table(file.path(path_rf, "test" , "X_test.txt" ),header = FALSE)
x <- rbind(x.train, x.test)
x.train <- read.table(file.path(path_rf, "train" , "X_train.txt" ),header = FALSE)
3
x.test <- read.table(file.path(path_rf, "test" , "X_test.txt" ),header = FALSE)
x <- rbind(x.train, x.test)
y.train <- read.table(file.path(path_rf, "train" , "y_train.txt" ),header = FALSE)
y.test <- read.table(file.path(path_rf, "test" , "y_test.txt" ),header = FALSE)
y <- rbind(y.train, y.test)
subj.train <- read.table(file.path(path_rf, "train" , "subject.txt" ),header = FALSE)
subj.train <- read.table(file.path(path_rf, "train" , "subject_train.txt" ),header = FALSE)
subj.test <- read.table(file.path(path_rf, "test" , "subject_test.txt" ),header = FALSE)
subj <- rbind(subj.train, subj.test)
features <- read.table(file.path(path_rf,  "features.txt" ),header = FALSE)
View(features)
mean.sd <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
x.mean.sd <- x[, mean.sd]
View(features)
View(features)
View(subj.train)
View(x.mean.sd)
View(features)
names(x.mean.sd) <- features[mean.sd, 2]
names(x.mean.sd) <- tolower(names(x.mean.sd))
names(x.mean.sd) <- gsub("\\(|\\)", "", names(x.mean.sd))
View(x.mean.sd)
activities <- read.table('./UCI HAR Dataset/activity_labels.txt')
activities[, 2] <- tolower(as.character(activities[, 2]))
activities[, 2] <- gsub("_", "", activities[, 2])
activities <- read.table('./UCI HAR Dataset/activity_labels.txt')
activities <- read.table('./UCI HAR Dataset/activity_labels.txt')
activities[, 2] <- tolower(as.character(activities[, 2]))
activities[, 2] <- gsub("_", "", activities[, 2])
activities <- read.table(file.path(path_rf,  "activity_labels.txt" ),header = FALSE)
activities[, 2] <- tolower(as.character(activities[, 2]))
activities[, 2] <- gsub("_", "", activities[, 2])
View(activities)
colnames(subj) <- 'subject'
y[, 1] = activities[y[, 1], 2]
colnames(y) <- 'activity'
colnames(subj) <- 'subject'
View(y)
# Appropriately labels the data set with descriptive activity names.
data <- cbind(subj, x.mean.sd, y)
str(data)
write.table(data, './Project/merged.txt', row.names = F)
# Creates a second, independent tidy data set with the average of each variable for each activity and each subject.
average.df <- aggregate(x=data, by=list(activities=data$activity, subj=data$subject), FUN=mean)
average.df <- average.df[, !(colnames(average.df) %in% c("subj", "activity"))]
str(average.df)
write.table(average.df, './Project/average.txt', row.names = F)
View(average.df)
